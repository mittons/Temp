on:
  push:
    branches:
      - staging

jobs:
  test-version-refs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Push to main/Main
      - name: Push to main 
        if: success()
        run: |
          # Configure git
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
     
          git remote add gh-token "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"          
          
          # Checkout main and merge changes from staging
          git fetch --all
          git checkout main
          git pull staging -X theirs

          # Add all changes (including file renames)
          git add -A
            
          # Create a squashed commit
          commit_message="Squash-like merge from staging: $(date +%Y-%m-%d)"
          git commit -m "$commit_message"

          # Push the squashed commit to main
          git push gh-token HEAD:main 

          # Go back to staging and merge the changes to keep it up to date
          git checkout staging
          git merge main
          git push staging
